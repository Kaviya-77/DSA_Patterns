/***Given a sorted array arr with possibly some duplicates, the task is to find the first and last occurrences of an element x in the given array.
Note: If the number x is not found in the array then return both the indices as -1.
Input: arr[] = [1, 3, 5, 5, 5, 5, 67, 123, 125], x = 5
Output: [2, 5]
Explanation: First occurrence of 5 is at index 2 and last occurrence of 5 is at index 5***/

// User function Template for Java

class GFG {
    ArrayList<Integer> find(int arr[], int x) {
        ArrayList<Integer> ans=new ArrayList<>(Arrays.asList(-1,-1));
        ans.set(0, Occurance(arr, x,"first"));
        ans.set(1, Occurance(arr, x,"last"));
         return ans;
        
    }
    public static int Occurance(int[] arr,int x,String type){
        int start=0;
        int end=arr.length-1;
        int res=-1;
        while(start<=end){
            int mid=start+(end-start)/2;
            if(arr[mid]==x){
                res=mid; //move left side for finding smaller one
                if(type.equals("first")) end=mid-1;
                if(type.equals("last")) start=mid+1;
            }
            else if(arr[mid]>x){
               end=mid-1; 
            }
            else{
                start=mid+1;
            }
        }
        return res;
    }
   
}
